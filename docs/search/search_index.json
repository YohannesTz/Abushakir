{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Abushakir (\u1263\u1215\u1228 \u1203\u1233\u1265) The words Bahire Hasab originate from the ancient language of Ge'ez, ( Arabic: Abu Shakir) is a time-tracking method, devised by the 12th pope of Alexandria, Pope St. Dimitri. What does it mean? \"Bahire Hasab /'b\u0259hr\u025b h\u0259s\u0259b'/ \" simply means \"An age with a descriptive and chronological number\". In some books it can also be found as \"Hasabe Bahir\", in a sense giving time an analogy, resembling a sea. This package allows developers to implement Ethiopian Calendar and Datetime System in their application(s)`. This package is implemented using the UNIX EPOCH which means it's not a conversion of any other calendar system into Ethiopian, for instance, Gregorian Calendar. Unix Epoch is measured using milliseconds since 01 Jan, 1970 UTC. In unix epoch leap seconds are ignored. Prerequisites Before you begin, ensure you have met the following requirements: json-simple-3.0.2.jar Getting started In your library add the following import: import com.github.besufikad17.abushakir.*; How Does it work? The Bahirehasab Class There are 8 Rules or you can call them conventions too. These are: When calculating [wenber]which is remainder of [ameteAlem] by 19, subtract 1 (ONE) from the remainder as of the story in ancient calculation \"\u12a0\u1295\u12f1\u1295 \u1208\u12d8\u1218\u1291 \u1230\u1320\u12cd\". If [metkih] > 14, then month of [metkih] will be at the FIRST month of the year. which is \u1218\u1235\u12a8\u1228\u121d. If [metkih] <= 14, then month of [metkih] will be at the SECOND month of the year. which is \u1325\u1245\u121d\u1275. If month of [metkih] is \u1218\u1235\u12a8\u1228\u121d (the FIRST month), then Nineveh or [nenewe] will be in \u1325\u122d (the FIFTH month). If month of [metkih] is \u1325\u1245\u121d\u1275 (the FIRST month), then Nineveh or [nenewe] will be in \u12e8\u12ab\u1272\u1275 (the SIXTH month). If the summation of [metkih] and the corresponding number of the weekday that [metkih] is on, is greater than 30 (> 30) then Nineveh or [nenewe] will be in \u12e8\u12ab\u1272\u1275 (the SIXTH month). If the value of [wenber] == 0, the corresponding value of the 30th weekday for \u1218\u1235\u12a8\u1228\u121d (the first month) will be the value of MEBAJA HAMER which is technically [metkih] + weekday corresponding value or number. If the value of [wenber] == 0, then Nineveh or [nenewe] will be in \u12e8\u12ab\u1272\u1275 (the SIXTH month) The ETDateTime Class ETDateTime can represent time values that are at a distance of at most 100,000,000 days from epoch (1970-01-01): -271821-04-20 to 275760-09-13. Create a ETDateTime object by using one of the constructors or by parsing a correctly formatted string, which complies with a subset of ISO 8601.ETDateTime can represent time values that are at a distance of at most 100,000,000 days from epoch (1970-01-01): -271821-04-20 to 275760-09-13. The ETC class The Ethiopian calendar is one of the the calendars which uses the solar system to reckon years, months and days, even time. Ethiopian single year consists of 365.25 days which will be 366 days with in 4 years period which causes the leap year. Ethiopian calendar has 13 months from which 12 months are full 30 days each and the 13th month will be 5 days or 6 days during leap year. Getting current Time Details To get the current time in the ethiopian calendar you first need to initialize the ETDateTime class and set it to now() method ETDateTime etDateTime = new ETDateTime(); etDateTime = etDateTime.now(); System.out.println(etDateTime.getDay()); // returns the day System.out.println(etDateTime.getMonth()); // returns month System.out.println(etDateTime.getYear()); // returns year Other Availabe date info methods etDateTime.toString(); etDateTime.getMinute(); etDateTime.getSecond(); etDateTime.getMillisecond(); Parsing Date from String To parse a date from String you will need to initialize the ETDateTime clas with date as String ETDateTime etDateTime = ETDateTime.Parse(\"2012-07-07 15:12:17.500\"); System.out.println(etDateTime.getDay()); // returns the day System.out.println(etDateTime.getMonth()); // returns month System.out.println(etDateTime.getYear()); // returns year Parsing from milliseconds Abushakir also supports parsing from unix milliseconds ETDateTime etDateTime = new ETDateTime().fromMillisecondsSinceEpoch(1585731446021L); System.out.println(etDateTime.getYear()); // returns year Getting Evangalists Getting the evangelist of the given year, if year is not provided it will take the current year and the years before christ ( \u12a0\u1218\u1270 \u134d\u12f3 ) and get the age of earth, since creation day of Adam and Eve and, divide it by 4. Bahirehasab bahirehasab = new Bahirehasab(2012); System.out.println(bahirehasab.getEvange()); Getting a date info in geez format If you ever needed to return the date in geez numbers ETDateTime etDateTime = new ETDateTime(2012, 2, 10); System.out.println(etDateTime.getMonth()); // returns 2 System.out.println(etDateTime.getMonthGeez()); // returns \u1325\u1245\u121d\u1275 System.out.println(etDateTime.getDay()); //returns 10 System.out.println(etDateTime.getDayGeez()); // returns \u1372 Date Comparision Using Abushakir you can compare if a date is before or after a date ETDateTime etDateTime = new ETDateTime(2012, 2, 10); etDateTime.isAfter(new ETDateTime(2001)); //returns true etDateTime.isBefore(new ETDateTime(2001)); //returns false Comparing Moments ETDateTime etd = new ETDateTime(2012, 2, 10); etd.isAtSameMomentAs(new ETDateTime( etd.getYear(),etd.getMonth(),etd.getDay(), etd.getHour(),etd.getMinute(),etd.getSecond(), etd.getMillisecond() ))); Operations on holidays You Can also get the month and date for a given holiday or fasting season Bahirehasab b = new Bahirehasab(); b.getSingleBealOrTsom(\"\u12d3\u1262\u12ed \u133e\u121d\").get(\"month\"); //returns \u12e8\u12ab\u1272\u1275 b.getSingleBealOrTsom(\"\u12d3\u1262\u12ed \u133e\u121d\").get(\"date\"); //returns 16 b.getSingleBealOrTsom(\"\u12f0\u1265\u1228 \u12d8\u12ed\u1275\").get(\"month\")); //returns \u1218\u130b\u1262\u1275 b.getSingleBealOrTsom(\"\u12f0\u1265\u1228 \u12d8\u12ed\u1275\").get(\"date\")); // returns 13 For further implementation example see this JavaFx application","title":"Home"},{"location":"#abushakir","text":"The words Bahire Hasab originate from the ancient language of Ge'ez, ( Arabic: Abu Shakir) is a time-tracking method, devised by the 12th pope of Alexandria, Pope St. Dimitri.","title":"Abushakir (\u1263\u1215\u1228 \u1203\u1233\u1265)"},{"location":"#what-does-it-mean","text":"\"Bahire Hasab /'b\u0259hr\u025b h\u0259s\u0259b'/ \" simply means \"An age with a descriptive and chronological number\". In some books it can also be found as \"Hasabe Bahir\", in a sense giving time an analogy, resembling a sea. This package allows developers to implement Ethiopian Calendar and Datetime System in their application(s)`. This package is implemented using the UNIX EPOCH which means it's not a conversion of any other calendar system into Ethiopian, for instance, Gregorian Calendar. Unix Epoch is measured using milliseconds since 01 Jan, 1970 UTC. In unix epoch leap seconds are ignored.","title":"What does it mean?"},{"location":"#prerequisites","text":"Before you begin, ensure you have met the following requirements: json-simple-3.0.2.jar","title":"Prerequisites"},{"location":"#getting-started","text":"In your library add the following import: import com.github.besufikad17.abushakir.*;","title":"Getting started"},{"location":"#how-does-it-work-the-bahirehasab-class","text":"There are 8 Rules or you can call them conventions too. These are: When calculating [wenber]which is remainder of [ameteAlem] by 19, subtract 1 (ONE) from the remainder as of the story in ancient calculation \"\u12a0\u1295\u12f1\u1295 \u1208\u12d8\u1218\u1291 \u1230\u1320\u12cd\". If [metkih] > 14, then month of [metkih] will be at the FIRST month of the year. which is \u1218\u1235\u12a8\u1228\u121d. If [metkih] <= 14, then month of [metkih] will be at the SECOND month of the year. which is \u1325\u1245\u121d\u1275. If month of [metkih] is \u1218\u1235\u12a8\u1228\u121d (the FIRST month), then Nineveh or [nenewe] will be in \u1325\u122d (the FIFTH month). If month of [metkih] is \u1325\u1245\u121d\u1275 (the FIRST month), then Nineveh or [nenewe] will be in \u12e8\u12ab\u1272\u1275 (the SIXTH month). If the summation of [metkih] and the corresponding number of the weekday that [metkih] is on, is greater than 30 (> 30) then Nineveh or [nenewe] will be in \u12e8\u12ab\u1272\u1275 (the SIXTH month). If the value of [wenber] == 0, the corresponding value of the 30th weekday for \u1218\u1235\u12a8\u1228\u121d (the first month) will be the value of MEBAJA HAMER which is technically [metkih] + weekday corresponding value or number. If the value of [wenber] == 0, then Nineveh or [nenewe] will be in \u12e8\u12ab\u1272\u1275 (the SIXTH month)","title":"How Does it work? The Bahirehasab Class"},{"location":"#the-etdatetime-class","text":"ETDateTime can represent time values that are at a distance of at most 100,000,000 days from epoch (1970-01-01): -271821-04-20 to 275760-09-13. Create a ETDateTime object by using one of the constructors or by parsing a correctly formatted string, which complies with a subset of ISO 8601.ETDateTime can represent time values that are at a distance of at most 100,000,000 days from epoch (1970-01-01): -271821-04-20 to 275760-09-13.","title":"The ETDateTime Class"},{"location":"#the-etc-class","text":"The Ethiopian calendar is one of the the calendars which uses the solar system to reckon years, months and days, even time. Ethiopian single year consists of 365.25 days which will be 366 days with in 4 years period which causes the leap year. Ethiopian calendar has 13 months from which 12 months are full 30 days each and the 13th month will be 5 days or 6 days during leap year.","title":"The ETC class"},{"location":"#getting-current-time-details","text":"To get the current time in the ethiopian calendar you first need to initialize the ETDateTime class and set it to now() method ETDateTime etDateTime = new ETDateTime(); etDateTime = etDateTime.now(); System.out.println(etDateTime.getDay()); // returns the day System.out.println(etDateTime.getMonth()); // returns month System.out.println(etDateTime.getYear()); // returns year Other Availabe date info methods etDateTime.toString(); etDateTime.getMinute(); etDateTime.getSecond(); etDateTime.getMillisecond();","title":"Getting current Time Details"},{"location":"#parsing-date-from-string","text":"To parse a date from String you will need to initialize the ETDateTime clas with date as String ETDateTime etDateTime = ETDateTime.Parse(\"2012-07-07 15:12:17.500\"); System.out.println(etDateTime.getDay()); // returns the day System.out.println(etDateTime.getMonth()); // returns month System.out.println(etDateTime.getYear()); // returns year","title":"Parsing Date from String"},{"location":"#parsing-from-milliseconds","text":"Abushakir also supports parsing from unix milliseconds ETDateTime etDateTime = new ETDateTime().fromMillisecondsSinceEpoch(1585731446021L); System.out.println(etDateTime.getYear()); // returns year","title":"Parsing from milliseconds"},{"location":"#getting-evangalists","text":"Getting the evangelist of the given year, if year is not provided it will take the current year and the years before christ ( \u12a0\u1218\u1270 \u134d\u12f3 ) and get the age of earth, since creation day of Adam and Eve and, divide it by 4. Bahirehasab bahirehasab = new Bahirehasab(2012); System.out.println(bahirehasab.getEvange());","title":"Getting Evangalists"},{"location":"#getting-a-date-info-in-geez-format","text":"If you ever needed to return the date in geez numbers ETDateTime etDateTime = new ETDateTime(2012, 2, 10); System.out.println(etDateTime.getMonth()); // returns 2 System.out.println(etDateTime.getMonthGeez()); // returns \u1325\u1245\u121d\u1275 System.out.println(etDateTime.getDay()); //returns 10 System.out.println(etDateTime.getDayGeez()); // returns \u1372","title":"Getting a date info in geez format"},{"location":"#date-comparision","text":"Using Abushakir you can compare if a date is before or after a date ETDateTime etDateTime = new ETDateTime(2012, 2, 10); etDateTime.isAfter(new ETDateTime(2001)); //returns true etDateTime.isBefore(new ETDateTime(2001)); //returns false Comparing Moments ETDateTime etd = new ETDateTime(2012, 2, 10); etd.isAtSameMomentAs(new ETDateTime( etd.getYear(),etd.getMonth(),etd.getDay(), etd.getHour(),etd.getMinute(),etd.getSecond(), etd.getMillisecond() )));","title":"Date Comparision"},{"location":"#operations-on-holidays","text":"You Can also get the month and date for a given holiday or fasting season Bahirehasab b = new Bahirehasab(); b.getSingleBealOrTsom(\"\u12d3\u1262\u12ed \u133e\u121d\").get(\"month\"); //returns \u12e8\u12ab\u1272\u1275 b.getSingleBealOrTsom(\"\u12d3\u1262\u12ed \u133e\u121d\").get(\"date\"); //returns 16 b.getSingleBealOrTsom(\"\u12f0\u1265\u1228 \u12d8\u12ed\u1275\").get(\"month\")); //returns \u1218\u130b\u1262\u1275 b.getSingleBealOrTsom(\"\u12f0\u1265\u1228 \u12d8\u12ed\u1275\").get(\"date\")); // returns 13 For further implementation example see this JavaFx application","title":"Operations on holidays"},{"location":"about/","text":"Version Abushakir - 1.0.0 Contributors Thanks to the following people who have contributed to this project see more of our projects at: @Besufikad \ud83d\udcd6 @Yohannes \ud83d\udcd6 Contact If you want to contact us you can reach me at besumicheal@gmail.com or reach out to yohannes at yohannes222ethiopia@gmail.com MIT License Copyright (c) 2020 Besufikad , Yohannes Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"About"},{"location":"about/#version","text":"Abushakir - 1.0.0","title":"Version"},{"location":"about/#contributors","text":"Thanks to the following people who have contributed to this project see more of our projects at: @Besufikad \ud83d\udcd6 @Yohannes \ud83d\udcd6","title":"Contributors"},{"location":"about/#contact","text":"If you want to contact us you can reach me at besumicheal@gmail.com or reach out to yohannes at yohannes222ethiopia@gmail.com","title":"Contact"},{"location":"about/#mit-license","text":"Copyright (c) 2020 Besufikad , Yohannes Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"license/","text":"MIT License Copyright (c) 2020 Besufikad , Yohannes Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#mit-license","text":"Copyright (c) 2020 Besufikad , Yohannes Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"}]}